{
  "name": "Imprs-scripts",
  "tagline": "A very powerful means of customizing the IMPRS™ Portal to perform advanced monitoring tasks.",
  "body": "### Scripting with Lua\r\nVaonet has incorporated Lua into the IMPRS™ product line with the intention of giving you a very powerful means of customizing the system to perform advanced monitoring tasks not easily accomplished through existing mechanisms. Along the way, we have made a few modifications to the core Lua libraries and also extended Lua's functionality to support and access some IMPRS-specific features.\r\n\r\nVaonet Lua is fully compatible with Lua 5.1. It supports almost all standard Lua library functions and the full set of Lua API functions. Vaonet Lua also extends the standard Lua virtual machine (VM) with new functionality and adds several extension modules. \r\n\r\nBut the most exciting feature of Vaonet Lua is that it implements a unique and extremely fast just-in-time compiler for executing scripts. As a scripting session is created, the associated script is compiled to actual x86 instructions. In so doing, the script execution speed is phenomenally fast because the script runs at the same speed as a native program would. When comparing Vaonet Lua execution speed with other interpreted language execution speeds, the results are jaw-dropping. For instance, one benchmark put the compiled version of an md5 hashing script running 135 times faster than the interpreted version of that same script!\r\n\r\n### Execution Contexts\r\n\r\nThe IMPRS Portal™ implements an engine for each of the various monitoring tasks it performs. There are email engines, trap monitoring engines, and syslog monitoring engines just to name a few. If an engine is configured to run a script (in response to receiving an email, for instance), then as that engine initializes, it creates a scripting session that remains in existence for as long as that engine is running. The advantage of maintaining a scripting session is that the script can store data and retrieve it the next time the script is run. This fact cannot be overstated. The script can effectively remember what happened during previous executions. Things such as thresholding, trending, and series calculations can be accomplished.\r\n\r\nThe following is a list of the engines:\r\n\r\n* Alcatel-Lucent 5620 SAM\r\n* Email Monitoring Interface\r\n* Generic Craft Interface\r\n* Network Equipment Syslog\r\n* Network Equipment Trap\r\n* Network Test and Task\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}